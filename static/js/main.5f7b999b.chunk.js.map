{"version":3,"sources":["components/Navbar.js","components/Textform.js","components/Alert.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","to","title","id","home","about","onClick","toggleMode","type","role","htmlFor","Textform","useState","text","setText","style","color","heading","value","onChange","event","console","log","target","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","newtext","split","join","length","prototypes","PropTypes","string","isRequired","defaultProps","Alert","alert","word","lower","charAt","slice","capitalize","msg","About","myStyle","setMyStyle","btntext","setBtnText","App","setMode","setAlert","message","setTimeout","body","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.5f7b999b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav\r\n      className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n    >\r\n      <div className=\"container-fluid\">\r\n        <Link className=\"navbar-brand\" to=\"/\">\r\n          {props.title}\r\n        </Link>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">\r\n                {props.home}\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link active\" aria-current=\"page\" to=\"/about\">\r\n                {props.about}\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n          {/* <form className=\"d-flex\">\r\n              <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n              <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n            </form> */}\r\n          <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>                     \r\n            <input\r\n              className=\"form-check-input\"\r\n              onClick={props.toggleMode}\r\n              type=\"checkbox\"\r\n              role=\"switch\"\r\n              id=\"flexSwitchCheckDefault\"\r\n            />\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">\r\n              enable darkmode\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nNavbar.prototypes = {\r\n  title: PropTypes.string.isRequired,\r\n  home: PropTypes.string.isRequired,\r\n  about: PropTypes.string,\r\n};\r\n\r\nNavbar.defaultProps = {\r\n  title: \"set title here\",\r\n  home: \" set home here\",\r\n  about: \"about text here\",\r\n};\r\n","import React ,{useState} from \"react\";\r\n\r\n\r\nexport default function Textform(props) {\r\n    const handleUpClick = () =>{\r\n        console.log(\"uppercase was clicked\");\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"COnverted to uppercase\",\"success\")\r\n    }\r\n     \r\n    const handleLowClick = () =>{\r\n        console.log(\"lowercse was clicked\");\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"COnverted to lowercase\",\"success\")\r\n      }\r\n    const handleCopy = () =>{\r\n      console.log(\"I am copied\");\r\n      var text = document.getElementById(\"myBox\");\r\n      text.select();\r\n      navigator.clipboard.writeText(text.value);\r\n      props.showAlert(\"text copied Successfully\",\"success\")\r\n    }\r\n  \r\n    const HandleExtraSpaces = () =>{\r\n      let newtext = text.split(/[ ]+/);\r\n      setText(newtext.join(\" \"))\r\n      props.showAlert(\"extra space cleared\",\"success\")\r\n    }\r\n    const clearText = () => {\r\n        console.log(\"clear\");\r\n        let newtext = \" \";\r\n        setText(newtext);\r\n        props.showAlert(\"text removed\",\"success\")\r\n    }\r\n\r\n\r\n    const handleOnChange = (event) =>{\r\n        console.log(\"On change\");\r\n        setText(event.target.value);\r\n    }\r\n\r\n\r\n    const [text , setText] = useState(\"\");\r\n    // text = \"new text\"; // wrong way to change the state\r\n    // setText('new text');  // corrrect way to change the state \r\n  return (\r\n    <>\r\n    <div className=\"container\" style={{color:props.mode ==='dark'?'white':'#394068'}}>\r\n    <h1>{props.heading}</h1>\r\n      <div className=\"mb-3\">\r\n        <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor:props.mode ==='dark'?'grey':'white' , color: props.mode==='dark'?'white':'#394068'}} id=\"myBox\" rows=\"8\"></textarea>\r\n      </div>\r\n      <button className=\"btn btn-primary mx-2\" onClick={handleUpClick}>Uppercase</button>\r\n      <button className=\"btn btn-primary mx-2 \" onClick={handleLowClick}>Lowercase</button>\r\n      <button className=\"btn btn-primary mx-2 \" onClick={handleCopy}>Copy text</button>\r\n      <button className=\"btn btn-primary mx-2 \" onClick={HandleExtraSpaces}>Remove xtr spaes</button>\r\n      <button className=\"btn btn-primary mx-2\" onClick={clearText}>Clear Text</button>\r\n     \r\n    </div>\r\n    <div className=\"container my-3\"  style={{color:props.mode ==='dark'?'white':'#394068'}}>\r\n     <h2>Your text here</h2>\r\n     <p>{text.split(\" \").length} words and {text.length} characters </p>\r\n     <p>{0.008 *text.split(\" \").length } Minutes read</p>\r\n     <h3>preview</h3>\r\n     <p>{text.length>0?text:\"enter something int hte textbox to preview\"}</p>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize = (word) =>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (  \r\n    props.alert &&  <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n       <strong>{capitalize(props.alert.type)}</strong>:{props.alert.msg} \r\n       \r\n     </div>\r\n      \r\n    )\r\n}\r\nexport default Alert","import React , { useState } from \"react\";\r\n\r\nexport default function About() {\r\n  const[myStyle, setMyStyle] = useState({\r\n      color:'black',\r\n      backgroundColor:'white'\r\n  })\r\n   const [btntext , setBtnText] = useState(\"enable dark mode\")\r\n   const toggleStyle = () =>{\r\n    if(myStyle.color === 'black'){\r\n      setMyStyle({\r\n        color: 'white',\r\n        backgroundColor: 'black'\r\n      })\r\n      setBtnText(\"Enable light mode\")\r\n    }\r\n    else{\r\n      setMyStyle({\r\n         color:'black',\r\n          backgroundColor:'white'\r\n        })\r\n        setBtnText(\"Enable dark mode\")\r\n      }\r\n  }\r\n  \r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\" style = {myStyle}>\r\n        <h2 className=\"my-3\">About Us</h2>\r\n        <div className=\"accordion\" id=\"accordionExample\" style = {myStyle}>\r\n          <div className=\"accordion-item\">\r\n            <h2 className=\"accordion-header\" id=\"headingOne\">\r\n              <button\r\n                className=\"accordion-button\"\r\n                style = {myStyle}\r\n                type=\"button\"\r\n                data-bs-toggle=\"collapse\"\r\n                data-bs-target=\"#collapseOne\"\r\n                aria-expanded=\"true\"\r\n                aria-controls=\"collapseOne\"\r\n              >\r\n                Accordion Item #1\r\n              </button>\r\n            </h2>\r\n            <div\r\n              id=\"collapseOne\"\r\n              className=\"accordion-collapse collapse show\"\r\n              aria-labelledby=\"headingOne\"\r\n              data-bs-parent=\"#accordionExample\"\r\n            >\r\n              <div className=\"accordion-body\" style = {myStyle}>\r\n                <strong>This is the first item's accordion body.</strong> It is\r\n                shown by default, within the <code>.accordion-body</code>,\r\n                though the transition does limit overflow.\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"accordion-item\">\r\n            <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n              <button\r\n                className=\"accordion-button collapsed\"\r\n                style = {myStyle}\r\n                type=\"button\"\r\n                data-bs-toggle=\"collapse\"\r\n                data-bs-target=\"#collapseTwo\"\r\n                aria-expanded=\"false\"\r\n                aria-controls=\"collapseTwo\"\r\n              >\r\n                Accordion Item #2\r\n              </button>\r\n            </h2>\r\n            <div\r\n              id=\"collapseTwo\"\r\n              className=\"accordion-collapse collapse\"\r\n              aria-labelledby=\"headingTwo\"\r\n              data-bs-parent=\"#accordionExample\"\r\n            >\r\n              <div className=\"accordion-body\" style = {myStyle}>\r\n                <strong>This is the second item's accordion body.</strong> It is\r\n                hidden by defaultjust about any HTML can go within the{\" \"}\r\n                <code>.accordion-body</code>, though the transition does limit\r\n                overflow.\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"accordion-item\">\r\n            <h2 className=\"accordion-header\" id=\"headingThree\">\r\n              <button\r\n                className=\"accordion-button collapsed\"\r\n                style = {myStyle}\r\n                type=\"button\"\r\n                data-bs-toggle=\"collapse\"\r\n                data-bs-target=\"#collapseThree\"\r\n                aria-expanded=\"false\"\r\n                aria-controls=\"collapseThree\"\r\n              >\r\n                Accordion Item #3\r\n              </button>\r\n            </h2>\r\n            <div\r\n              id=\"collapseThree\"\r\n              className=\"accordion-collapse collapse\"\r\n              aria-labelledby=\"headingThree\"\r\n              data-bs-parent=\"#accordionExample\"\r\n            >\r\n              <div className=\"accordion-body\" style = {myStyle}>\r\n                <strong>This is the third item's accordion body.</strong> It is\r\n                hidden by default, ucan go within the{\" \"}\r\n                <code>.accordion-body</code>, though the transition does limit\r\n                overflow.\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"my-3\">\r\n          <button onClick={toggleStyle} type=\"button\" className=\"btn btn-primary\">\r\n           {btntext}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport Textform from \"./components/Textform\";\nimport Alert from \"./components/Alert\";\nimport About from \"./components/About\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\"); // whether dark mode is  enabled or not\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#394068\";\n      showAlert(\" Dark mode has been enabled\", \"success\");\n      document.title = \"TEXtUtils - DarkMode\";\n      // setInterval(() =>{\n      //   document.title =\"TExtUtils is Amazing \";\n      // },2000)\n      // setInterval(() =>{\n      //   document.title =\"Install TExtUtils is now \";\n      // },1500)\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\" Light mode has been enabled\", \"success\");\n      document.title = \"TEXtUtils - LightMode\";\n    }\n  };\n  return (\n    <>\n      <Router>\n        <Navbar\n          title=\"TextUtils\"\n          mode={mode}\n          toggleMode={toggleMode}\n          home=\"Home\"\n          about=\"About us\"\n        />\n        <Alert alert={alert} />\n        <div className=\"container my-3\">\n          <Switch>\n            <Route exact path=\"/about\">\n              <About />\n            </Route>\n            <Route exact path=\"/\">\n              <Textform\n                showAlert={showAlert}\n                heading=\"enter the text\"\n                mode={mode}\n              />\n            </Route>\n          </Switch>\n        </div>  \n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}